# Autogenerated file from the user-defined pipeline.

from generator import core_beam as bm

# User-defined functions.
hello = "http://localhost:42000/hello"
multiply = "http://localhost:42000/multiply"
with_numbers = "http://localhost:42000/with_numbers"


def run(beam_args):
    with bm.Pipeline(beam_args) as pipeline:
        names = (
            pipeline
            | "Create names" >> bm.Create(["Apache", "Beam"])
            | "Call hello" >> bm.Call(hello)
            | "Log greetings" >> bm.Log()
        )

        numbers = (
            pipeline
            | "Create numbers" >> bm.Create([1, 2, 3, 4])
            | "Call multiply" >> bm.Call(multiply, n=5)
            | "Log numbers" >> bm.Log()
        )

        names_with_numbers = (
            names
            | "With numbers" >> bm.Call(with_numbers, numbers=bm.AsIter(numbers))
            | "Flatten" >> bm.FlatMap(bm.identity)
            | "Log names with numbers" >> bm.Log()
        )


if __name__ == "__main__":
    import argparse

    parser = argparse.ArgumentParser()
    args, beam_args = parser.parse_known_args()

    run(beam_args)
